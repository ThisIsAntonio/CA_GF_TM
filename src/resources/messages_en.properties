languageTitle 			= Select Language
selectLanguageLabel 	= Select Language:
btnConfirm 				= Confirm
windowTitle 			= [ JAP - Computer Science ]
errorLoadImage			= Could not load image.
btnOk					= Accept
btnCancel				= Cancel
btnClose 				= Close
btnHelp 				= Help
selectAssignment 		= Select Assignment
CA	 					= [A12] CA - Cellular Automata
GL	 					= [A22] GL - Game of Life
TM	 					= [A32] TM - Turing Machine Server
TMC 					= [A32] TM - Turing Machine Client
binaryRuleLabel			= Binary Rule:
setButton				= Set
modelLabel				= Model:
languageLabel			= Language:
invalidBinaryMessage	= Please write an 8 digit binary number. (ex: 10011001)
titleLabel				= Cellular Automata
btnReturn				= Return
menuBar					= Menu
languageBar				= Language
englishBar				= English
spanishBar				= Spanish
helpBar					= Help
aboutUsBar				= About Us
titleAboutUsLabel		= About us
aboutUsInfoCA			= <h1>About Us - Cellular Automata</h1><h2>This implementation of the Cellular Automata is developed by the team </h2><ul><li>David Burchat</li><li>Marcos Astudillo C.</li></ul><h2>Thanks for Using Our Application!</h2>
aboutUsInfo				= <h1>About Us - CSModel</h1><h2>This project is developed by the team:</h2><ul><li>David Burchat</li><li>Marcos Astudillo C.</li></ul><h2>Thanks for Using Our Application!</h2>
titleHelpLabel			= Help
helpInfo				= <p>This program is the starting point for the system. It contains a selection box that allows the user to choose which program or game to run.</p><h2>Instructions</h2><ol><li><strong>Select a Task:</strong> Use the selection box to choose a task from the list.</li><li><strong>Confirm:</strong> Click the "Confirm" button to start the selected task.</li><li><strong>Close:</strong> Click the "Close" button to exit the application.</li></ol><h2>Language</h2><p>You can change the application language in the main menu.</p><h2>Help and About Us</h2><ul><li>Click "Help" for more information on how to use this application.</li><li>Click "About Us" to learn more about the developers of this application.</li></ul>
tooltipAssignmentBox	= Select one Assignment to show in screen
tooltipBtnConfirm		= Press to show the Assignment
tooltipBtnCancel		= Press to Close the window
tooltipEnglishMenuItem	= Press to show the screen in English
tooltipSpanishMenuItem	= Press to show the screen in Spanish
tooltipHelpMenuItem		= Press to show the Help screen
tooltipAboutUsMenuItem	= Press to show the About Us screen
tooltipBtnIncrement		= Press to increment the value in 1
tooltipBtnDecrement		= Press to decrement the value in 1
tooltipBtnSet			= Press to show the Binary Model
tooltipBtnReturn		= Press to return to the Main window
tooltipLanguageSubMenuItem = Select a language to show in this window
messageDialog			= If you want to change later the language, you can do it from the menu
messageDialogNoAssgSelected	= Please, select an Assignment first before continuing.
greaterBinaryMessage 	= Binary value cannot be greater than 255. (11111111)
lesserBinaryMessage 	= Binary value cannot be lower than 0. (00000000)
btnRandom				= Random
btnManual				= Manual
currentStepLbl			= Step Num:
btnPrev					= Prev
btnStart				= Start
stepsLabel				= Steps:
btnStop					= Stop
btnNext					= Next
btnRestart				= Restart
preferencesMenu			= Preferences
changeBoardSize			= Board resize
changeCellColor			= Color change
colorPaletteTitle		= Select Color
customColorPrompt		= Custom Color
multicolorOption		= Multicolor
mainTitle				= Game of Life
helpHeaderGL			= Welcome to the Game of Life!
helpInfoGL				= The Game of Life is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\n\nThe rules are simple:\n- A cell can be alive (colored) or dead (white).\n - The board is divided into a grid of cells.\n- You can interact with the board by clicking on cells to toggle their state (alive/dead).\n- Click the 'Random' button to fill the board with random live cells.\n- Click the 'Manual' button to manually toggle cells on/off.\n- Specify a custom rule in the 'Model' field using 0s and 1s (e.g., 001100000011000000).\n- Click the 'Start' button to start the simulation based on the selected rule.\n- Use the 'Prev' and 'Next' buttons to step through the simulation.\n- You can change the cell color from the 'Preferences' menu.\n\nHave fun exploring the fascinating patterns and behaviors that can emerge!
aboutUsHeaderGL			= Game of Life - About Us
aboutUsInfoGL			= This implementation of the Game of Life is developed by the GL team:\n\n- David Burchat\n- Marcos Astudillo C.\n\nThanks for using our application
emptyRuleMessage		= Rule is empty, using Conway by default.\n
ruleAdviceMessage		= The program will use the rule\n
invalidRuleLengthMessage	= The entry must be exactly 18 characters.
changeBoardSizeDialogTitle	= Change board size
sizeLabelSizeDialog		= Board Size:
invalidInputMessage		= The number of steps is not valid.
invalidBinaryRuleMessage		= Invalid binary rule. The rule must have exactly 18 characters and only contain 0s and 1s.
invalidAliveNeighborsMessage	= Invalid number of alive neighbors:
ruleIndexOutOfBoundsMessage		= Rule index out of bounds:
invalidInputTitle				= Error
btnClose				= Close
modelInputPrompt		= 000100000001100000
stepsInputPrompt		= Write a numbers of steps
gameMenu				= Game
newGameMenuItem			= New Game
solutionMenuItem		= Solution
exitMenuItem			= Exit
colorPickerInstructions	= Select a color:
solutionDialogTitle		= Solution Steps
solutionHeaderText		= Enter the number of steps for the solution\n (or leave empty for 100 steps):
solutionContentText		= Steps: 
solutionErrorText		= Invalid input. Please enter a valid number of steps.
notMatchesError			= The input can only contain 0s and 1s.
lengthToLongError		= The entry cannot be more than 18 characters.
changeBoardSizeDialogTitle	= Board Size
widthLabel				= Width: 
heightLabel				= Height: 
inputErrorBoardSize		= The board could not be over 100x100
serverTitle				= Turing Machine Server
startServer				= Start Server
stopServer				= Stop Server
ipLabel					= Current IP Address
connectionStatusLabel	= Connection Status
portLabel				= Port:
clientConnectedMessage	= has connected from IP address
clientConnectedTitle	= Client Connected
ipError					= Could not obtain IP address
languageMenu			= Language
serverStarted			= The server has started successfully on IP
serverStartedTitle		= Server Started
serverRunningStatus		= Server Running
serverStopping			= Server is stopping. Closing acceptance loop.
serverStartError		= Error starting the server
errorTitle				= Error
helloFromServer			= Hello from Server
tabAddedFor				= Tab added for
userAlreadyHasChatTab	= User already has a chat tab
serverStopped			= The server was stopped successfully.
serverStoppedTitle		= Server Stopped
serverStoppedStatus		= Server Stopped
clientDisconnected		= Client has disconnected
connectedTo				= Connected to
connectButtonText		= Connect
endButtonText			= End Session
clientWindowTitle		= Client for Turing Machine
usernameLabel			= Username:
serverIPLabel			= Server IP:
portLabel				= Port:
newTMButtonText			= Validate TM
sendButtonText			= Send
receiveButtonText		= Receive
runButtonText			= Run
confirmCloseMessage		= Do you really want to close the session?
confirmCloseTitle		= Confirm Closure
tmInputLabel			= TM:
serverMessagesLabel		= Messages from Server:
notConnectedLabel		= Not Connected
errorEmptyUsername		= Username must not be empty.
errorEmptyServerIP		= Please insert the server IP.
usingDefaultPort		= Using default Port: 
validBinaryNumber		= Valid binary number.
invalidBinaryNumber		= Input is not a valid binary number.
errorTitle				= Error
infoTitle				= Information
serverMessagesLabel		= Server Messages
portError				= Port error
helloFromClient			= Hello from client
connected				= Connected
server					= Server
connectionError			= Connection error
disconnected			= Disconnected
disconnectError			= Error while disconnecting
printWriterNotInitialized	= PrintWriter not initialized
socketClosed			= Socket closed, ending message reception thread.
lostConnection			= Connection with the server has been lost.
serverMessagesLabel		= Server Messages:
tmWindowTitle			= Turing Machine Interface
currentStateLabel		= Current State:
stepButtonText			= Step
stopButtonText			= Stop
tapeInputLabel			= Tape:
setTapeButtonText		= Set Tape
tRuleLabel				= TM:
setButtonLabel			= Set
stepButtonLabel			= Next Step
resetButtonLabel		= Reset
runButtonLabel			= Run
stopButtonLabel			= Stop
cleanButtonLabel		= Clean
helpInfoTMServer		= <h1>Help - Turing Machine Server</h1><p>The Turing Machine Server is designed to manage and process Turing machine simulations. <br><br><b>Key Features:</b><br>- The server allows multiple clients to connect and run Turing machine simulations.<br>- Supports various Turing machine rules and configurations.<br>- Clients can send their Turing machine configurations to the server, which then processes and returns the results of the simulation.<br>- The server keeps a record of all connected clients and their activities.<br>- Capable of handling concurrent requests, making it efficient for collaborative work.<br>- The server's user interface provides real-time updates on the status of connected clients and ongoing simulations.<br><br>Enjoy exploring the fascinating world of Turing machines and their applications!</p>
aboutUsInfoTMServer		= <h1>About Us - Turing Machine Server</h1><h2>This implementation of the Turing Machine Server is developed by the team </h2><ul><li>David Burchat</li><li>Marcos Astudillo C.</li></ul><h2>Thanks for Using Our Application!</h2>
helpInfoTMClient		= <h1>Help - Turing Machine Client</h1><p>The Turing Machine Client is designed to interact with the Turing Machine Server, allowing users to execute Turing machine simulations remotely. <br><br><b>Key Features:</b><br>- Connect to the server to run Turing machine simulations.<br>- Send and receive Turing machine configurations to and from the server.<br>- Support for multiple Turing machine configurations and rules.<br>- Intuitive user interface for easy interaction with the server.<br>- Ability to receive and display simulation results in real time.<br>- Functionality to send messages and commands to the server efficiently.<br><br>Experience the possibilities offered by Turing machines in a collaborative and remote environment!</p>
aboutUsInfoTMCLient		= <h1>About Us - Turing Machine Client</h1><h2>This implementation of the Turing Machine Client has been developed by the team:</h2><ul><li>David Burchat</li><li>Marcos Astudillo C.</li></ul><h2>Thank you for using our application!</h2>
helpInfoTM				= <h1>Help - Turing Machine Interface</h1><p>The Turing Machine Interface is designed to facilitate Turing machine simulations in an interactive and visual manner. <br><br><b>Key Features:</b><br>- Allows users to configure and run Turing machine simulations.<br>- Supports input of transition rules and tapes for the machine.<br>- Offers a visual representation of the tape and machine state during simulation.<br>- Functionality for step-by-step execution or continuous running of the simulation.<br>- Intuitive interface for easy setup and monitoring of machine progress.<br>- Useful tool for teaching and learning Turing machine concepts.<br><br>Explore and experiment with the fascinating world of Turing machines interactively!</p>
aboutUsInfoTM			= <h1>About Us - Turing Machine Interface</h1><h2>This implementation of the Turing Machine Interface has been developed by the team:</h2><ul><li>David Burchat</li><li>Marcos Astudillo C.</li></ul><h2>Thank you for using our application!</h2>
localhost				= Localhost
currentIP				= current IP
ipQuestion				= Do you want to start the server using localhost or the current IP address?
selectIpQuestion		= Select IP Address
confirmLocalhostUsage	= No server IP provided.\nDo you want to connect using localhost?\n(Remember that the server must have been started with the IP localhost)
confirmDialogTitle		= Confirm Connection
serverMessageStop		= The server has stopped.\nThe application will close.
serverMessageStop2		= Server Stopped
tapeErrorMessage		= Tape can only contain zeros and ones.
tapeErrorMessage2		= Validation Error
viewButton				= View Transition Rule
transitionRuleEmpty		= No transition rule saved on server
transitionRuleMessage	= Transition Rule